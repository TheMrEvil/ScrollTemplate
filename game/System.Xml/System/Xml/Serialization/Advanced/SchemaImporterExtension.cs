using System;
using System.CodeDom;
using System.CodeDom.Compiler;
using System.Xml.Schema;

namespace System.Xml.Serialization.Advanced
{
	/// <summary>Allows you to customize the code generated from a Web Services Description Language (WSDL) document when using automated query tools.</summary>
	// Token: 0x02000320 RID: 800
	public abstract class SchemaImporterExtension
	{
		/// <summary>Allows you to manipulate the code generated by examining the imported schema and specifying the CLR type that it maps to.</summary>
		/// <param name="name">The name of the element.</param>
		/// <param name="ns">The namespace of the element.</param>
		/// <param name="context">An <see cref="T:System.Xml.Schema.XmlSchemaObject" /> that represents schema information, such as the line number of the XML element.</param>
		/// <param name="schemas">An <see cref="T:System.Xml.Serialization.XmlSchemas" /> that contains the collection of schemas in the document.</param>
		/// <param name="importer">The <see cref="T:System.Xml.Serialization.XmlSchemaImporter" /> that is the importer being used.</param>
		/// <param name="compileUnit">A <see cref="T:System.CodeDom.CodeCompileUnit" /> to which you can add CodeDOM structures to generate alternative code for the XSD.</param>
		/// <param name="mainNamespace">A <see cref="T:System.CodeDom.CodeNamespace" /> that represents the current namespace for the element.</param>
		/// <param name="options">A <see cref="T:System.Xml.Serialization.CodeGenerationOptions" /> for the setting options on the code compiler.</param>
		/// <param name="codeProvider">A <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> that is used to generate the new code.</param>
		/// <returns>The name of the CLR type that this maps to.</returns>
		// Token: 0x060020EF RID: 8431 RVA: 0x0001DA42 File Offset: 0x0001BC42
		public virtual string ImportSchemaType(string name, string ns, XmlSchemaObject context, XmlSchemas schemas, XmlSchemaImporter importer, CodeCompileUnit compileUnit, CodeNamespace mainNamespace, CodeGenerationOptions options, CodeDomProvider codeProvider)
		{
			return null;
		}

		/// <summary>Allows you to manipulate the code generated by examining the imported schema and specifying the CLR type that it maps to.</summary>
		/// <param name="type">An <see cref="T:System.Xml.Schema.XmlSchemaType" /> that represents the XSD type.</param>
		/// <param name="context">An <see cref="T:System.Xml.Schema.XmlSchemaObject" /> that represents schema information, such as the line number of the XML element.</param>
		/// <param name="schemas">An <see cref="T:System.Xml.Serialization.XmlSchemas" /> that contains the collection of schemas in the document.</param>
		/// <param name="importer">The <see cref="T:System.Xml.Serialization.XmlSchemaImporter" /> that is the importer being used.</param>
		/// <param name="compileUnit">A <see cref="T:System.CodeDom.CodeCompileUnit" /> to which you can add CodeDOM structures to generate alternative code for the XSD.</param>
		/// <param name="mainNamespace">A <see cref="T:System.CodeDom.CodeNamespace" /> that represents the current namespace for the element.</param>
		/// <param name="options">A <see cref="T:System.Xml.Serialization.CodeGenerationOptions" /> for the setting options on the code compiler.</param>
		/// <param name="codeProvider">A <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> that is used to generate the new code.</param>
		/// <returns>The name of the CLR type that this maps to.</returns>
		// Token: 0x060020F0 RID: 8432 RVA: 0x0001DA42 File Offset: 0x0001BC42
		public virtual string ImportSchemaType(XmlSchemaType type, XmlSchemaObject context, XmlSchemas schemas, XmlSchemaImporter importer, CodeCompileUnit compileUnit, CodeNamespace mainNamespace, CodeGenerationOptions options, CodeDomProvider codeProvider)
		{
			return null;
		}

		/// <summary>Handles the importation of the &lt;xsd:any&gt; elements in the schema.</summary>
		/// <param name="any">An <see cref="T:System.Xml.Schema.XmlSchemaAny" /> that represents the <see langword="xsd:any" /> element found in the XML Schema Document (XSD).</param>
		/// <param name="mixed">A <see cref="T:System.Boolean" /> that indicates whether the XSD <see langword="complex" /> attribute has been set to "mixed". <see langword="true" />, if the attribute has been set to mixed, otherwise <see langword="false" />. </param>
		/// <param name="schemas">An <see cref="T:System.Xml.Serialization.XmlSchemas" /> that contains the collection of schemas found in the XSD.</param>
		/// <param name="importer">The <see cref="T:System.Xml.Serialization.XmlSchemaImporter" /> that is the importer being used.</param>
		/// <param name="compileUnit">A <see cref="T:System.CodeDom.CodeCompileUnit" /> to which you can add CodeDOM structures to generate alternative code for the XSD. </param>
		/// <param name="mainNamespace">A <see cref="T:System.CodeDom.CodeNamespace" /> that represents the current namespace for the element.</param>
		/// <param name="options">A <see cref="T:System.Xml.Serialization.CodeGenerationOptions" /> for the setting options on the code compiler.</param>
		/// <param name="codeProvider">A <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> that is the CodeDOM provider used to generate the new code. </param>
		/// <returns>The name of the CLR type that the element maps to. </returns>
		// Token: 0x060020F1 RID: 8433 RVA: 0x0001DA42 File Offset: 0x0001BC42
		public virtual string ImportAnyElement(XmlSchemaAny any, bool mixed, XmlSchemas schemas, XmlSchemaImporter importer, CodeCompileUnit compileUnit, CodeNamespace mainNamespace, CodeGenerationOptions options, CodeDomProvider codeProvider)
		{
			return null;
		}

		/// <summary>Allows you to specify the default value for the XSD type being imported.</summary>
		/// <param name="value">The value found in the original XSD.</param>
		/// <param name="type">The XSD type name.</param>
		/// <returns>A <see cref="T:System.CodeDom.CodeExpression" /> setting the new default value.</returns>
		// Token: 0x060020F2 RID: 8434 RVA: 0x0001DA42 File Offset: 0x0001BC42
		public virtual CodeExpression ImportDefaultValue(string value, string type)
		{
			return null;
		}

		/// <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.Advanced.SchemaImporterExtension" /> class. </summary>
		// Token: 0x060020F3 RID: 8435 RVA: 0x0000216B File Offset: 0x0000036B
		protected SchemaImporterExtension()
		{
		}
	}
}
