using System;
using Unity;

namespace System.Data.SqlClient
{
	/// <summary>Collects information relevant to a warning or error returned by SQL Server.</summary>
	// Token: 0x02000200 RID: 512
	[Serializable]
	public sealed class SqlError
	{
		// Token: 0x060018D4 RID: 6356 RVA: 0x00073E64 File Offset: 0x00072064
		internal SqlError(int infoNumber, byte errorState, byte errorClass, string server, string errorMessage, string procedure, int lineNumber, uint win32ErrorCode, Exception exception = null) : this(infoNumber, errorState, errorClass, server, errorMessage, procedure, lineNumber, exception)
		{
			this._win32ErrorCode = (int)win32ErrorCode;
		}

		// Token: 0x060018D5 RID: 6357 RVA: 0x00073E8C File Offset: 0x0007208C
		internal SqlError(int infoNumber, byte errorState, byte errorClass, string server, string errorMessage, string procedure, int lineNumber, Exception exception = null)
		{
			this._source = "Core .Net SqlClient Data Provider";
			base..ctor();
			this._number = infoNumber;
			this._state = errorState;
			this._errorClass = errorClass;
			this._server = server;
			this._message = errorMessage;
			this._procedure = procedure;
			this._lineNumber = lineNumber;
			this._win32ErrorCode = 0;
			this._exception = exception;
		}

		/// <summary>Gets the complete text of the error message.</summary>
		/// <returns>The complete text of the error.</returns>
		// Token: 0x060018D6 RID: 6358 RVA: 0x00073EEE File Offset: 0x000720EE
		public override string ToString()
		{
			return typeof(SqlError).ToString() + ": " + this._message;
		}

		/// <summary>Gets the name of the provider that generated the error.</summary>
		/// <returns>The name of the provider that generated the error.</returns>
		// Token: 0x1700046F RID: 1135
		// (get) Token: 0x060018D7 RID: 6359 RVA: 0x00073F0F File Offset: 0x0007210F
		public string Source
		{
			get
			{
				return this._source;
			}
		}

		/// <summary>Gets a number that identifies the type of error.</summary>
		/// <returns>The number that identifies the type of error.</returns>
		// Token: 0x17000470 RID: 1136
		// (get) Token: 0x060018D8 RID: 6360 RVA: 0x00073F17 File Offset: 0x00072117
		public int Number
		{
			get
			{
				return this._number;
			}
		}

		/// <summary>Some error messages can be raised at multiple points in the code for the Database Engine. For example, an 1105 error can be raised for several different conditions. Each specific condition that raises an error assigns a unique state code.</summary>
		/// <returns>The state code.</returns>
		// Token: 0x17000471 RID: 1137
		// (get) Token: 0x060018D9 RID: 6361 RVA: 0x00073F1F File Offset: 0x0007211F
		public byte State
		{
			get
			{
				return this._state;
			}
		}

		/// <summary>Gets the severity level of the error returned from SQL Server.</summary>
		/// <returns>A value from 1 to 25 that indicates the severity level of the error. The default is 0.</returns>
		// Token: 0x17000472 RID: 1138
		// (get) Token: 0x060018DA RID: 6362 RVA: 0x00073F27 File Offset: 0x00072127
		public byte Class
		{
			get
			{
				return this._errorClass;
			}
		}

		/// <summary>Gets the name of the instance of SQL Server that generated the error.</summary>
		/// <returns>The name of the instance of SQL Server.</returns>
		// Token: 0x17000473 RID: 1139
		// (get) Token: 0x060018DB RID: 6363 RVA: 0x00073F2F File Offset: 0x0007212F
		public string Server
		{
			get
			{
				return this._server;
			}
		}

		/// <summary>Gets the text describing the error.</summary>
		/// <returns>The text describing the error. For more information on errors generated by SQL Server, see Database Engine Events and Errors.</returns>
		// Token: 0x17000474 RID: 1140
		// (get) Token: 0x060018DC RID: 6364 RVA: 0x00073F37 File Offset: 0x00072137
		public string Message
		{
			get
			{
				return this._message;
			}
		}

		/// <summary>Gets the name of the stored procedure or remote procedure call (RPC) that generated the error.</summary>
		/// <returns>The name of the stored procedure or RPC. For more information on errors generated by SQL Server, see Database Engine Events and Errors.</returns>
		// Token: 0x17000475 RID: 1141
		// (get) Token: 0x060018DD RID: 6365 RVA: 0x00073F3F File Offset: 0x0007213F
		public string Procedure
		{
			get
			{
				return this._procedure;
			}
		}

		/// <summary>Gets the line number within the Transact-SQL command batch or stored procedure that contains the error.</summary>
		/// <returns>The line number within the Transact-SQL command batch or stored procedure that contains the error.</returns>
		// Token: 0x17000476 RID: 1142
		// (get) Token: 0x060018DE RID: 6366 RVA: 0x00073F47 File Offset: 0x00072147
		public int LineNumber
		{
			get
			{
				return this._lineNumber;
			}
		}

		// Token: 0x17000477 RID: 1143
		// (get) Token: 0x060018DF RID: 6367 RVA: 0x00073F4F File Offset: 0x0007214F
		internal int Win32ErrorCode
		{
			get
			{
				return this._win32ErrorCode;
			}
		}

		// Token: 0x17000478 RID: 1144
		// (get) Token: 0x060018E0 RID: 6368 RVA: 0x00073F57 File Offset: 0x00072157
		internal Exception Exception
		{
			get
			{
				return this._exception;
			}
		}

		// Token: 0x060018E1 RID: 6369 RVA: 0x000108A6 File Offset: 0x0000EAA6
		internal SqlError()
		{
			ThrowStub.ThrowNotSupportedException();
		}

		// Token: 0x0400102C RID: 4140
		private string _source;

		// Token: 0x0400102D RID: 4141
		private int _number;

		// Token: 0x0400102E RID: 4142
		private byte _state;

		// Token: 0x0400102F RID: 4143
		private byte _errorClass;

		// Token: 0x04001030 RID: 4144
		private string _server;

		// Token: 0x04001031 RID: 4145
		private string _message;

		// Token: 0x04001032 RID: 4146
		private string _procedure;

		// Token: 0x04001033 RID: 4147
		private int _lineNumber;

		// Token: 0x04001034 RID: 4148
		private int _win32ErrorCode;

		// Token: 0x04001035 RID: 4149
		private Exception _exception;
	}
}
