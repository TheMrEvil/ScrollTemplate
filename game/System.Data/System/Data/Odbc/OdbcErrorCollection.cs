using System;
using System.Collections;

namespace System.Data.Odbc
{
	/// <summary>Collects all errors generated by the <see cref="T:System.Data.Odbc.OdbcDataAdapter" />. This class cannot be inherited.</summary>
	// Token: 0x020002E8 RID: 744
	[Serializable]
	public sealed class OdbcErrorCollection : ICollection, IEnumerable
	{
		// Token: 0x06002102 RID: 8450 RVA: 0x0009A54A File Offset: 0x0009874A
		internal OdbcErrorCollection()
		{
		}

		/// <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
		/// <returns>An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</returns>
		// Token: 0x170005E7 RID: 1511
		// (get) Token: 0x06002103 RID: 8451 RVA: 0x00005696 File Offset: 0x00003896
		object ICollection.SyncRoot
		{
			get
			{
				return this;
			}
		}

		/// <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
		/// <returns>
		///   <see langword="true" /> if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</returns>
		// Token: 0x170005E8 RID: 1512
		// (get) Token: 0x06002104 RID: 8452 RVA: 0x00006D64 File Offset: 0x00004F64
		bool ICollection.IsSynchronized
		{
			get
			{
				return false;
			}
		}

		/// <summary>Gets the number of errors in the collection.</summary>
		/// <returns>The total number of errors in the collection.</returns>
		// Token: 0x170005E9 RID: 1513
		// (get) Token: 0x06002105 RID: 8453 RVA: 0x0009A55D File Offset: 0x0009875D
		public int Count
		{
			get
			{
				return this._items.Count;
			}
		}

		/// <summary>Gets the error at the specified index.</summary>
		/// <param name="i">The zero-based index of the error to retrieve.</param>
		/// <returns>An <see cref="T:System.Data.Odbc.OdbcError" /> that contains the error at the specified index.</returns>
		// Token: 0x170005EA RID: 1514
		public OdbcError this[int i]
		{
			get
			{
				return (OdbcError)this._items[i];
			}
		}

		// Token: 0x06002107 RID: 8455 RVA: 0x0009A57D File Offset: 0x0009877D
		internal void Add(OdbcError error)
		{
			this._items.Add(error);
		}

		/// <summary>Copies the elements of the <see cref="T:System.Data.Odbc.OdbcErrorCollection" /> into an array, starting at the specified index within the array.</summary>
		/// <param name="array">The array into which to copy the elements.</param>
		/// <param name="i">The starting index of <paramref name="array" />.</param>
		/// <exception cref="T:System.ArgumentException">The sum of <paramref name="index" /> and the number of elements in the <see cref="T:System.Data.Odbc.OdbcErrorCollection" /> is greater than the length of the array.</exception>
		/// <exception cref="T:System.ArgumentNullException">The <paramref name="array" /> is <see langword="null" />.</exception>
		/// <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> is not valid for <paramref name="array" />.</exception>
		// Token: 0x06002108 RID: 8456 RVA: 0x0009A58C File Offset: 0x0009878C
		public void CopyTo(Array array, int i)
		{
			this._items.CopyTo(array, i);
		}

		/// <summary>Copies all the elements of the current <see cref="T:System.Data.Odbc.OdbcErrorCollection" /> to the specified <see cref="T:System.Data.Odbc.OdbcErrorCollection" /> starting at the specified destination index.</summary>
		/// <param name="array">The <see cref="T:System.Data.Odbc.OdbcErrorCollection" /> that is the destination of the elements copied from the current <see cref="T:System.Data.Odbc.OdbcErrorCollection" />.</param>
		/// <param name="i">A 32-bit integer that represents the index in the <see cref="T:System.Data.Odbc.OdbcErrorCollection" /> at which copying starts.</param>
		// Token: 0x06002109 RID: 8457 RVA: 0x0009A58C File Offset: 0x0009878C
		public void CopyTo(OdbcError[] array, int i)
		{
			this._items.CopyTo(array, i);
		}

		/// <summary>Returns an object that implements the <see cref="T:System.Collections.IEnumerator" /> interface and that can iterate through the <see cref="T:System.Data.Odbc.OdbcErrorCollection" /> objects in the <see cref="T:System.Data.Odbc.OdbcErrorCollection" />.</summary>
		/// <returns>An object that implements the <see cref="T:System.Collections.IEnumerator" /> interface and that can iterate through the <see cref="T:System.Data.Odbc.OdbcErrorCollection" /> objects in the <see cref="T:System.Data.Odbc.OdbcErrorCollection" />.</returns>
		// Token: 0x0600210A RID: 8458 RVA: 0x0009A59B File Offset: 0x0009879B
		public IEnumerator GetEnumerator()
		{
			return this._items.GetEnumerator();
		}

		// Token: 0x0600210B RID: 8459 RVA: 0x0009A5A8 File Offset: 0x000987A8
		internal void SetSource(string Source)
		{
			foreach (object obj in this._items)
			{
				((OdbcError)obj).SetSource(Source);
			}
		}

		// Token: 0x040017BA RID: 6074
		private ArrayList _items = new ArrayList();
	}
}
