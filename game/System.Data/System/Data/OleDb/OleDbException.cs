using System;
using System.Data.Common;
using System.Runtime.Serialization;
using System.Security.Permissions;

namespace System.Data.OleDb
{
	/// <summary>The exception that is thrown when the underlying provider returns a warning or error for an OLE DB data source. This class cannot be inherited.</summary>
	// Token: 0x02000166 RID: 358
	[MonoTODO("OleDb is not implemented.")]
	public sealed class OleDbException : DbException
	{
		// Token: 0x06001363 RID: 4963 RVA: 0x0005ADDE File Offset: 0x00058FDE
		internal OleDbException()
		{
		}

		/// <summary>Gets the HRESULT of the error.</summary>
		/// <returns>The HRESULT of the error.</returns>
		// Token: 0x1700033B RID: 827
		// (get) Token: 0x06001364 RID: 4964 RVA: 0x0005ABF4 File Offset: 0x00058DF4
		public override int ErrorCode
		{
			get
			{
				throw ADP.OleDb();
			}
		}

		/// <summary>Gets a collection of one or more <see cref="T:System.Data.OleDb.OleDbError" /> objects that give detailed information about exceptions generated by the .NET Framework Data Provider for OLE DB.</summary>
		/// <returns>The collected instances of the <see cref="T:System.Data.OleDb.OleDbError" /> class.</returns>
		// Token: 0x1700033C RID: 828
		// (get) Token: 0x06001365 RID: 4965 RVA: 0x0005ABF4 File Offset: 0x00058DF4
		public OleDbErrorCollection Errors
		{
			get
			{
				throw ADP.OleDb();
			}
		}

		/// <summary>This member overrides <see cref="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />.</summary>
		/// <param name="si">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
		/// <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
		/// <exception cref="T:System.ArgumentNullException">The <paramref name="si" /> parameter is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
		// Token: 0x06001366 RID: 4966 RVA: 0x0005ABF4 File Offset: 0x00058DF4
		[SecurityPermission(SecurityAction.LinkDemand, Flags = SecurityPermissionFlag.SerializationFormatter)]
		public override void GetObjectData(SerializationInfo si, StreamingContext context)
		{
			throw ADP.OleDb();
		}
	}
}
