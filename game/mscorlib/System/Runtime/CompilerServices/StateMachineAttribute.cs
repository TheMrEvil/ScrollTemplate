using System;

namespace System.Runtime.CompilerServices
{
	/// <summary>Allows you to determine whether a method is a state machine method.</summary>
	// Token: 0x02000805 RID: 2053
	[AttributeUsage(AttributeTargets.Method, Inherited = false, AllowMultiple = false)]
	[Serializable]
	public class StateMachineAttribute : Attribute
	{
		/// <summary>Initializes a new instance of the <see cref="T:System.Runtime.CompilerServices.StateMachineAttribute" /> class.</summary>
		/// <param name="stateMachineType">The type object for the underlying state machine type that was generated by the compiler to implement the state machine method.</param>
		// Token: 0x06004620 RID: 17952 RVA: 0x000E591B File Offset: 0x000E3B1B
		public StateMachineAttribute(Type stateMachineType)
		{
			this.StateMachineType = stateMachineType;
		}

		/// <summary>Returns the type object for the underlying state machine type that was generated by the compiler to implement the state machine method.</summary>
		/// <returns>Gets the type object for the underlying state machine type that was generated by the compiler to implement the state machine method.</returns>
		// Token: 0x17000ACA RID: 2762
		// (get) Token: 0x06004621 RID: 17953 RVA: 0x000E592A File Offset: 0x000E3B2A
		public Type StateMachineType
		{
			[CompilerGenerated]
			get
			{
				return this.<StateMachineType>k__BackingField;
			}
		}

		// Token: 0x04002D41 RID: 11585
		[CompilerGenerated]
		private readonly Type <StateMachineType>k__BackingField;
	}
}
